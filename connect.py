#!/usr/bin/env python3
import paramiko

def connect_to_server():
    print("üîó –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É...")
    
    ssh = paramiko.SSHClient()
    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    
    try:
        ssh.connect('77.110.105.228', username='root', password='WFdYPuq0Dyef')
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!")
        
        # –ü—Ä–æ–≤–µ—Ä–∏–º –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        print("\nüìù –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ auth-service...")
        stdin, stdout, stderr = ssh.exec_command('cd /opt/auth-service && docker compose logs auth-service --tail=20')
        logs = stdout.read().decode()
        print(logs)
        
        # –ü—Ä–æ–≤–µ—Ä–∏–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SMTP
        print("\nüîß –ü—Ä–æ–≤–µ—Ä—è–µ–º SMTP –Ω–∞—Å—Ç—Ä–æ–π–∫–∏...")
        stdin, stdout, stderr = ssh.exec_command('cd /opt/auth-service && cat .env | grep SMTP')
        smtp_settings = stdout.read().decode()
        print(smtp_settings)
        
        # –û—Å—Ç–∞–≤–∏–º —Å–µ—Å—Å–∏—é –æ—Ç–∫—Ä—ã—Ç–æ–π –¥–ª—è –∫–æ–º–∞–Ω–¥
        print("\nüíª –ú–æ–∂–µ—à—å –≤–≤–æ–¥–∏—Ç—å –∫–æ–º–∞–Ω–¥—ã (–¥–ª—è –≤—ã—Ö–æ–¥–∞ –≤–≤–µ–¥–∏ 'exit'):")
        while True:
            cmd = input("server$ ")
            if cmd.lower() == 'exit':
                break
            stdin, stdout, stderr = ssh.exec_command(f'cd /opt/auth-service && {cmd}')
            output = stdout.read().decode()
            error = stderr.read().decode()
            if output:
                print(output)
            if error:
                print(f"–û—à–∏–±–∫–∞: {error}")
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
    finally:
        ssh.close()

if __name__ == "__main__":
    connect_to_server()