version: '3.8'

services:
  # Микросервис аутентификации
  auth-service:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: rostelecom-auth-service
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_NAME=auth_service
      - JWT_SECRET=your-super-secret-key-change-in-production-12345
      - PORT=8080
    depends_on:
      - postgres
    networks:
      - rostelecom-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # База данных PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: rostelecom-postgres
    environment:
      - POSTGRES_DB=auth_service
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    networks:
      - rostelecom-network
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:

networks:
  rostelecom-network:
    driver: bridge