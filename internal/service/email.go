package service

import (
	"fmt"
	"net/smtp"
	"os"
	"strconv"
)

type EmailService struct {
	host     string
	port     string
	username string
	password string
	from     string
}

func NewEmailService() *EmailService {
	return &EmailService{
		host:     os.Getenv("SMTP_HOST"),
		port:     os.Getenv("SMTP_PORT"),
		username: os.Getenv("SMTP_USERNAME"),
		password: os.Getenv("SMTP_PASSWORD"),
		from:     os.Getenv("SMTP_FROM"),
	}
}

func (s *EmailService) Send2FACode(email, code string) error {
	// –ï—Å–ª–∏ SMTP –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –≤—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å (–¥–µ–º–æ-—Ä–µ–∂–∏–º)
	if s.host == "" || s.username == "" || s.password == "" {
		fmt.Printf("üéØ 2FA –∫–æ–¥ –¥–ª—è %s: %s (SMTP –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω)\n", email, code)
		return nil
	}

	// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SMTP
	auth := smtp.PlainAuth("", s.username, s.password, s.host)

	port, _ := strconv.Atoi(s.port)
	if port == 0 {
		port = 587
	}

	// –¢–µ–∫—Å—Ç –ø–∏—Å—å–º–∞
	subject := "Subject: –ö–æ–¥ –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ - –†–æ—Å—Ç–µ–ª–µ–∫–æ–º –ü—Ä–æ–µ–∫—Ç—ã\r\n"
	mime := "MIME-version: 1.0;\r\nContent-Type: text/html; charset=\"UTF-8\";\r\n\r\n"
	body := fmt.Sprintf(`
<html>
<body style="font-family: Arial, sans-serif;">
    <div style="max-width: 600px; margin: 0 auto; padding: 20px; border: 1px solid #ddd;">
        <h2 style="color: #1890ff;">–†–æ—Å—Ç–µ–ª–µ–∫–æ–º –ü—Ä–æ–µ–∫—Ç—ã</h2>
        <h3>–ö–æ–¥ –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏</h3>
        <p>–í–∞—à –∫–æ–¥ –¥–ª—è –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É:</p>
        <div style="font-size: 32px; font-weight: bold; color: #1890ff; text-align: center; margin: 20px 0;">
            %s
        </div>
        <p><strong>–ö–æ–¥ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω 10 –º–∏–Ω—É—Ç.</strong></p>
        <p>–ï—Å–ª–∏ –≤—ã –Ω–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–ª–∏ —ç—Ç–æ—Ç –∫–æ–¥, –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ —ç—Ç–æ –ø–∏—Å—å–º–æ.</p>
        <hr>
        <p style="color: #666; font-size: 12px;">–≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –æ—Ç–≤–µ—á–∞–π—Ç–µ –Ω–∞ –Ω–µ–≥–æ.</p>
    </div>
</body>
</html>`, code)

	msg := []byte(subject + mime + body)

	// –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ—á—Ç—ã
	err := smtp.SendMail(s.host+":"+strconv.Itoa(port), auth, s.from, []string{email}, msg)
	if err != nil {
		fmt.Printf("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ—á—Ç—ã: %v\n", err)
		return err
	}

	fmt.Printf("‚úÖ –ö–æ–¥ 2FA –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ %s\n", email)
	return nil
}
